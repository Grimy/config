#!/usr/bin/perl

use strict;
use feature qw(state);
use List::Util qw(first sum max);

my %files = ();
my @colors = ("\e[0;38m", "\e[0;33m", "\e[1;31m", "\e[0;31m"),
$\=$";

sub lines(_) {
	my ($file) = @_;
	open my $fh, '<', $file or die "$file: $!";
	return readline $fh;
}

sub percent {
	my ($part, $total) = @_;
	$% = $total && $part / $total * 100;
	print "$colors[$% / 30]$%%\e[m";
}

sub bytes {
	s;\d\K(\d{3})+\b;qw(k M G T P)[$&=~y///c/3-1];e for @_;
	print @_;
}

sub top {
	my ($score, $name) = split ' ', max(@_), 2;
	print $name;
	bytes $score;
}

my ($sec, $min, $hour) = map sprintf("%02d", $_), localtime(time);
print "$hour:$min";

my ($avg1, $avg5, $avg15) = split ' ', lines "/proc/loadavg";
my $nproc = `nproc`;
percent $avg1, $nproc;
percent $avg15, $nproc;

my @cpu;
for (map lines, </proc/*/stat>) {
	@_ = split;
	my $cpu = $_[13] + $_[14];
	$cpu[$_[0]] = $cpu . " " . substr $_[1], 1, -1;
}
top @cpu;

my %h;
/:/, $h{$`} = $' for lines "/proc/meminfo";
percent $h{MemTotal} - $h{MemFree} - $h{Buffers} - $h{Cached}, $h{MemTotal};

my @mem;
for (map lines, </proc/*/stat>) {
	@_ = split;
	$mem[$_[0]] = 4096 * $_[23] . ' ' . substr $_[1], 1, -1;
}
top @mem;

print ~~map /procs_blocked \K\d+/g, lines "/proc/stat";

my ($total, $used, $free) = `df -B1 /var` =~ /\b\d+\b/g;
percent $total - $free, $total;

print system('mail -e 2>/dev/null') ? "  " : " $colors[2]!\e[m"
